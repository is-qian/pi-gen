name: Build reTerminal image

on:
  workflow_dispatch:
    inputs:
      pi-gen-version:
        description: 'This can both be a branch or tag name known in the pi-gen repository.'
        required: true
        default: 'arm64'
        type: string
      enable-ssh:
        description: 'Enable SSH server'
        required: true
        default: "1"
        type: choice
        options:
          - 1
          - 0
      stage-list:
        description: 'List of stage name to execute in given order.'
        required: true
        default: 'stage0 stage1 stage2 stage3 stage4 stage4a'
        type: string
      wpa-country:
        description: 'Set the country code for WPA'
        required: true
        default: 'CN'
        type: string
      keyboard-keymap:
        description: 'Set the keyboard keymap'
        required: true
        default: 'us'
        type: string
      compression:
        description: 'Compression method for the image'
        required: true
        default: 'xz'
        type: choice
        options:
          - xz
          - none
          - gz
          - zip
      pi-gen-dir:
        description: 'Path to the pi-gen directory'
        required: true
        default: 'pi-gen'
      export-last-stage-only:
        description: 'Export only the last stage image'
        required: true
        default: 'true'
        type: choice
        options:
          - true
          - false
      verbose-output:
        description: 'Enable verbose output'
        required: true
        default: 'false'
        type: choice
        options:
          - true
          - false

jobs:
  reTerminal-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: before Build
        run: |
          sudo apt-get remove aria2 ansible shellcheck rpm xorriso zsync \
          clang-6.0 lldb-6.0 lld-6.0 clang-format-6.0 clang-8 lldb-8 lld-8 clang-format-8 \
          clang-9 lldb-9 lld-9 clangd-9 clang-format-9 \
          esl-erlang gfortran-8 gfortran-9 \
          cabal-install-2.0 cabal-install-2.2 \
          cabal-install-2.4 cabal-install-3.0 cabal-install-3.2 heroku imagemagick \
          libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
          mercurial apt-transport-https mono-complete mysql-client libmysqlclient-dev \
          mysql-server mssql-tools unixodbc-dev yarn bazel chrpath libssl-dev libxft-dev \
          libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
          php-zmq snmp pollinate libpq-dev postgresql-client ruby-full \
          azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell \
          sphinxsearch subversion mongodb-org -yq >/dev/null 2>&1 \
          || echo "failed main apt-get remove"
          echo "Removing large packages"
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get clean
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          #echo "https://github.com/actions/virtual-environments/issues/709"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "remove big /usr/local"
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /usr/local/lib/android >/dev/null 2>&1
          sudo rm -rf /usr/share/dotnet/sdk > /dev/null 2>&1
          sudo rm -rf /usr/share/dotnet/shared > /dev/null 2>&1
          sudo rm -rf /usr/share/swift > /dev/null 2>&1
          sudo -E apt-get -qq update
          sudo -E apt-get -y install git
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          df -h

      - name: Getting parameter configuration
        run: |
          cp -rf dev_config/reTerminal/* stage4a/00-dtoverlays/
          chmod +x stage4a/prerun.sh
          chmod +x stage4a/00-dtoverlays/*.sh

      - name: Build pi-gen with stagelists
        uses: usimd/pi-gen-action@v1
        id: build
        with:
          image-name: 'reTerminal'
          pi-gen-version: ${{ inputs.pi-gen-version }}
          compression: ${{ inputs.compression }}
          enable-ssh: ${{ inputs.enable-ssh }}
          wpa-country: ${{ inputs.wpa-country }}
          keyboard-keymap: ${{ inputs.keyboard-keymap }}
          stage-list: ${{ inputs.stage-list }}
          pi-gen-dir: ${{ inputs.pi-gen-dir }}
          export-last-stage-only: ${{ inputs.export-last-stage-only }}
          verbose-output: ${{ inputs.verbose-output }}

      - name: Upload reTerminal image
        uses: actions/upload-artifact@v3
        with:
          name: reTerminal-${{ inputs.pi-gen-version }}-image
          path: ${{ steps.build.outputs.image-path }}